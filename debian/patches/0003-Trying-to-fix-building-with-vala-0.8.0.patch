From: Qball Cow <qball@stuffkeeper.org>
Date: Tue, 6 Apr 2010 14:39:37 +0200
Subject: Trying to fix building with vala 0.8.0

---
 src/Providers/music-tree.vala              |    6 +-
 src/Widgets/gmpc-progress.vala             |    2 +-
 src/browsers/gmpc-metadata-browser2.vala   |   70 ++++++++++++++--------------
 src/browsers/gmpc-nowplaying2.vala         |   24 +++++-----
 src/vala/gmpc-database-update-tracker.vala |    4 +-
 src/vala/gmpc-easy-command.vala            |    6 +-
 src/vala/gmpc-favorites.vala               |    6 +-
 src/vala/gmpc-metadata-prefetcher.vala     |    4 +-
 src/vala/gmpc-paned-size-group.vala        |    4 +-
 src/vala/gmpc-plugin.vala                  |    6 +-
 src/vala/gmpc-rating.vala                  |    2 +-
 src/vala/gmpc-test-plugin.vala             |   39 ++++++++--------
 src/vala/gmpc-url-fetching-gui.vala        |    2 +-
 src/vapi/gmpc.vapi                         |   26 +++++-----
 src/vapi/libmpd.vapi                       |    6 +-
 15 files changed, 103 insertions(+), 104 deletions(-)

diff --git a/src/Providers/music-tree.vala b/src/Providers/music-tree.vala
index a7e6a7c..3b7a62b 100644
--- a/src/Providers/music-tree.vala
+++ b/src/Providers/music-tree.vala
@@ -41,11 +41,11 @@ public class Gmpc.Provider.MusicTree : Gmpc.Plugin.Base, Gmpc.Plugin.MetaDataIfa
     public const int[] version = {0,0,2};
 
     
-    public override weak int[] get_version() {
+    public override unowned int[] get_version() {
         return this.version;
     }
 
-    public override weak string get_name() {
+    public override unowned string get_name() {
         return N_("Music Tree Provider");
     }
 
@@ -74,7 +74,7 @@ public class Gmpc.Provider.MusicTree : Gmpc.Plugin.Base, Gmpc.Plugin.MetaDataIfa
     {
         List<Gmpc.MetaData.Item> list = null;
         string id =  profiles.get_current_id();
-        weak string directory = null;
+        unowned string directory = null;
 
         log("Gmpc.Plugin.MusicTreeProvider", GLib.LogLevelFlags.LEVEL_DEBUG, 
                 "Starting Query");
diff --git a/src/Widgets/gmpc-progress.vala b/src/Widgets/gmpc-progress.vala
index 38c40f9..9193142 100644
--- a/src/Widgets/gmpc-progress.vala
+++ b/src/Widgets/gmpc-progress.vala
@@ -178,7 +178,7 @@ public class Gmpc.Progress : Gtk.HBox
 
     }
    
-    signal void seek_event (uint seek_time);
+    public signal void seek_event (uint seek_time);
 
 
     private void value_changed (Gtk.Scale range)
diff --git a/src/browsers/gmpc-metadata-browser2.vala b/src/browsers/gmpc-metadata-browser2.vala
index 373ff69..6c33019 100644
--- a/src/browsers/gmpc-metadata-browser2.vala
+++ b/src/browsers/gmpc-metadata-browser2.vala
@@ -65,7 +65,7 @@ public class Gmpc.Widget.SimilarSongs : Gtk.Alignment{
         {
             if(model.get_iter(out iter, path))
             {
-                weak MPD.Song song = null;
+                unowned MPD.Song song = null;
                 model.get(iter, 0, out song, -1);
                 if(song != null)
                 {
@@ -89,7 +89,7 @@ public class Gmpc.Widget.SimilarSongs : Gtk.Alignment{
             Gtk.TreePath path = list.data;
             if(model.get_iter(out iter, path))
             {
-                weak MPD.Song song = null;
+                unowned MPD.Song song = null;
                 model.get(iter, 0, out song, -1);
                 if(song != null)
                 {
@@ -110,7 +110,7 @@ public class Gmpc.Widget.SimilarSongs : Gtk.Alignment{
         {
             if(model.get_iter(out iter, path))
             {
-                weak MPD.Song song = null;
+                unowned MPD.Song song = null;
                 model.get(iter, 0, out song, -1);
                 if(song != null)
                 {
@@ -135,7 +135,7 @@ public class Gmpc.Widget.SimilarSongs : Gtk.Alignment{
         Gtk.TreeIter iter;
         if(model.get_iter(out iter, path))
         {
-            weak MPD.Song song = null;
+            unowned MPD.Song song = null;
             model.get(iter, 0, out song, -1);
             if(song != null)
             {
@@ -170,7 +170,7 @@ public class Gmpc.Widget.SimilarSongs : Gtk.Alignment{
 
     private Gmpc.MetaData.Item copy = null;
     MPD.Data.Item item = null;
-    private weak List <weak string> current = null;
+    private unowned List <unowned string> current = null;
     private bool update_sim_song()
     {
         if(current == null){
@@ -341,7 +341,7 @@ public class Gmpc.Widget.SimilarArtist : Gtk.Table {
         /* Set result */
         else {
             List<Gtk.Widget> in_db_list = null;
-            GLib.List<weak string> list = met.get_text_list().copy();
+            GLib.List<unowned string> list = met.get_text_list().copy();
             list.sort((GLib.CompareFunc)string.collate);
 
 
@@ -349,7 +349,7 @@ public class Gmpc.Widget.SimilarArtist : Gtk.Table {
             int i = 0;
             if(list != null)
             {
-                weak List<weak string> liter= null;                 
+                unowned List<unowned string> liter= null;                 
                 MPD.Database.search_field_start(server, MPD.Tag.Type.ARTIST);
                 var data = MPD.Database.search_commit(server);
 
@@ -359,7 +359,7 @@ public class Gmpc.Widget.SimilarArtist : Gtk.Table {
                 {
 
                     data.sort_album_disc_track();
-                    weak MPD.Data.Item iter = data.get_first();
+                    unowned MPD.Data.Item iter = data.get_first();
 
                     liter = list.first();
                     string artist = "";
@@ -429,7 +429,7 @@ public class Gmpc.Widget.SimilarArtist : Gtk.Table {
     void
     artist_button_clicked(Gtk.Button button)
     {
-        weak string artist = (string)button.get_data("artist");
+        unowned string artist = (string)button.get_data<string>("artist");
         Gmpc.Browser.Metadata.show_artist(artist);
     }
     public
@@ -523,12 +523,12 @@ public class  Gmpc.MetadataBrowser : Gmpc.Plugin.Base, Gmpc.Plugin.BrowserIface,
         Gdk.Color.parse(foreground,out this.foreground);
     }
 
-    public const int[] version =  {0,0,0};
-    public override  weak int[] get_version() {
+    private int[] version =  {0,0,0};
+    public override  unowned int[] get_version() {
         return version;
     }
 
-    public override weak string get_name() {
+    public override unowned string get_name() {
         return N_("Metadata Browser");
     }
 
@@ -544,7 +544,7 @@ public class  Gmpc.MetadataBrowser : Gmpc.Plugin.Base, Gmpc.Plugin.BrowserIface,
         if(this.rref != null) {
             var path = rref.get_path();
             if(path != null) {
-                weak int[] indices  = path.get_indices();
+                unowned int[] indices  = path.get_indices();
                 config.set_int(this.get_name(), "position", indices[0]);
             }
         }
@@ -1137,7 +1137,7 @@ public class  Gmpc.MetadataBrowser : Gmpc.Plugin.Base, Gmpc.Plugin.BrowserIface,
         Gtk.TreeModel model;
         if(sel.get_selected(out model, out iter))
         {
-            weak MPD.Song songs = null;
+            unowned MPD.Song songs = null;
             this.model_songs .get(iter, 0,out songs, -1);
             return songs;
         }
@@ -1160,7 +1160,7 @@ public class  Gmpc.MetadataBrowser : Gmpc.Plugin.Base, Gmpc.Plugin.BrowserIface,
 
             this.model_albums.set_request_artist(artist);
             MPD.Data.Item list = null;
-            weak MPD.Data.Item iter = data.get_first();
+            unowned MPD.Data.Item iter = data.get_first();
             if(iter!= null)
             {
                 do{
@@ -1174,7 +1174,7 @@ public class  Gmpc.MetadataBrowser : Gmpc.Plugin.Base, Gmpc.Plugin.BrowserIface,
                     MPD.Database.search_add_constraint(server, MPD.Tag.Type.ALBUM, iter.tag);
                     var ydata = MPD.Database.search_commit(server);
                     if(ydata != null) {
-                        weak MPD.Data.Item yi = ydata.get_first();
+                        unowned MPD.Data.Item yi = ydata.get_first();
                         while(list.song.date == null && yi != null)
                         {
                             if(yi.tag != null && yi.tag.length > 0) {
@@ -1518,7 +1518,7 @@ public class  Gmpc.MetadataBrowser : Gmpc.Plugin.Base, Gmpc.Plugin.BrowserIface,
 
         /* Lyrics */
         i = 0;
-        weak SList<weak Gtk.RadioButton> group  = null;
+        unowned SList<unowned Gtk.RadioButton> group  = null;
         if(config.get_int_with_default("MetaData", "show-lyrics",1) == 1)
         {
             var alib = new Gtk.Alignment(0f,0f,1f,0f);
@@ -1691,7 +1691,7 @@ public class  Gmpc.MetadataBrowser : Gmpc.Plugin.Base, Gmpc.Plugin.BrowserIface,
         var model = tree.get_model();
         if(model.get_iter(out iter, path))
         {
-            weak MPD.Song song = null;
+            unowned MPD.Song song = null;
             model.get(iter, 0, out song, -1);
             if(song != null)
             {
@@ -1704,7 +1704,7 @@ public class  Gmpc.MetadataBrowser : Gmpc.Plugin.Base, Gmpc.Plugin.BrowserIface,
 
     private void album_song_browser_play_clicked(Gtk.ImageMenuItem item)
     {
-        Gtk.TreeView tree = (Gtk.TreeView)item.get_data("tree");
+        Gtk.TreeView tree = (Gtk.TreeView)item.get_data<Gtk.TreeView>("tree");
         if(tree != null)
         {
             Gtk.TreeIter iter;
@@ -1715,7 +1715,7 @@ public class  Gmpc.MetadataBrowser : Gmpc.Plugin.Base, Gmpc.Plugin.BrowserIface,
             {
                 if(model.get_iter(out iter, path))
                 {
-                    weak MPD.Song song = null;
+                    unowned MPD.Song song = null;
                     model.get(iter, 0, out song, -1);
                     if(song != null)
                     {
@@ -1728,7 +1728,7 @@ public class  Gmpc.MetadataBrowser : Gmpc.Plugin.Base, Gmpc.Plugin.BrowserIface,
     }
     private void album_song_browser_add_clicked(Gtk.ImageMenuItem item)
     {
-        Gtk.TreeView tree = (Gtk.TreeView)item.get_data("tree");
+        Gtk.TreeView tree = (Gtk.TreeView)item.get_data<Gtk.TreeView>("tree");
         if(tree != null)
         {
             Gtk.TreeIter iter;
@@ -1739,7 +1739,7 @@ public class  Gmpc.MetadataBrowser : Gmpc.Plugin.Base, Gmpc.Plugin.BrowserIface,
             {
                 if(model.get_iter(out iter, path))
                 {
-                    weak MPD.Song song = null;
+                    unowned MPD.Song song = null;
                     model.get(iter, 0, out song, -1);
                     if(song != null)
                     {
@@ -1787,9 +1787,9 @@ public class  Gmpc.MetadataBrowser : Gmpc.Plugin.Base, Gmpc.Plugin.BrowserIface,
                 var list = tree.get_selection().get_selected_rows(out model);
                 if(list != null)
                 {
-                    weak Gtk.TreePath path = list.data;
+                    unowned Gtk.TreePath path = list.data;
                     Gtk.TreeIter iter;
-                    weak MPD.Song song = null;
+                    unowned MPD.Song song = null;
                     if(model.get_iter(out iter, path))
                     {
                         model.get(iter, 0, out song);
@@ -1900,7 +1900,7 @@ public class  Gmpc.MetadataBrowser : Gmpc.Plugin.Base, Gmpc.Plugin.BrowserIface,
 
         /* Lyrics */
         i = 0;
-        weak SList<weak Gtk.RadioButton> group  = null;
+        unowned SList<unowned Gtk.RadioButton> group  = null;
         /* Album information */
         if(config.get_int_with_default("MetaData", "show-album-information",1) == 1)
         {
@@ -2156,7 +2156,7 @@ public class  Gmpc.MetadataBrowser : Gmpc.Plugin.Base, Gmpc.Plugin.BrowserIface,
         notebook.set_show_tabs(false);
 
         i = 0;
-        weak SList<weak Gtk.RadioButton> group  = null;
+        unowned SList<unowned Gtk.RadioButton> group  = null;
         /* Artist information */
         if(config.get_int_with_default("MetaData", "show-artist-information",1) == 1)
         {
@@ -2312,7 +2312,7 @@ public class  Gmpc.MetadataBrowser : Gmpc.Plugin.Base, Gmpc.Plugin.BrowserIface,
             MPD.Data.Item list = null;
             var data = MPD.Database.search_commit(server);
             if(data != null){
-                weak MPD.Data.Item iter = data.get_first();
+                unowned MPD.Data.Item iter = data.get_first();
                 do{
                     if(iter.tag == song.album){
                         iter = iter.next(false); 
@@ -2328,7 +2328,7 @@ public class  Gmpc.MetadataBrowser : Gmpc.Plugin.Base, Gmpc.Plugin.BrowserIface,
                     MPD.Database.search_add_constraint(server, MPD.Tag.Type.ALBUM, iter.tag);
                     var ydata = MPD.Database.search_commit(server);
                     if(ydata != null) {
-                        weak MPD.Data.Item yi = ydata.get_first();
+                        unowned MPD.Data.Item yi = ydata.get_first();
                         while(list.song.date == null && yi != null)
                         {
                             if(yi.tag != null && yi.tag.length > 0) {
@@ -2343,7 +2343,7 @@ public class  Gmpc.MetadataBrowser : Gmpc.Plugin.Base, Gmpc.Plugin.BrowserIface,
 
             list.sort_album_disc_track();
             if(list != null) {
-                weak MPD.Data.Item iter = list.get_first();
+                unowned MPD.Data.Item iter = list.get_first();
                 do{
                     button = new Gtk.Button();
                     button.set_relief(Gtk.ReliefStyle.NONE);
@@ -2525,7 +2525,7 @@ public class  Gmpc.MetadataBrowser : Gmpc.Plugin.Base, Gmpc.Plugin.BrowserIface,
         public MPD.Song song;
     }
     private List<Hitem?> history = null;
-    private weak List<Hitem?> current = null;
+    private unowned List<Hitem?> current = null;
     private void show_hitem(Hitem hi)
     {
         switch(hi.type)
@@ -2572,7 +2572,7 @@ public class  Gmpc.MetadataBrowser : Gmpc.Plugin.Base, Gmpc.Plugin.BrowserIface,
     }
     private void history_show_list_clicked(Gtk.MenuItem item)
     {
-        weak List<Hitem?> a = (List<Hitem?>) item.get_data("current");
+        unowned List<Hitem?> a = (List<Hitem?>) item.get_data<List<Hitem?>>("current");
         if(a != null)
         {
             current = a;
@@ -2582,7 +2582,7 @@ public class  Gmpc.MetadataBrowser : Gmpc.Plugin.Base, Gmpc.Plugin.BrowserIface,
     private void history_show_list()
     {
         var menu = new Gtk.Menu();
-        weak List<Hitem?> iter = history.last();
+        unowned List<Hitem?> iter = history.last();
         while(iter!= null){
             var i = iter.data;
             string label = "";
@@ -2639,7 +2639,7 @@ public class  Gmpc.MetadataBrowser : Gmpc.Plugin.Base, Gmpc.Plugin.BrowserIface,
     {
         if(history != null)
         {
-            weak Hitem a = current.data;
+            unowned Hitem a = current.data;
             if(a.type == hi.type) {
                 if(Gmpc.Misc.song_checksum(a.song) == Gmpc.Misc.song_checksum(hi.song)){
                     return;
@@ -2648,7 +2648,7 @@ public class  Gmpc.MetadataBrowser : Gmpc.Plugin.Base, Gmpc.Plugin.BrowserIface,
         }
         history.prepend(hi);
         if(history.length() > 25){
-            weak List<Hitem?> a = history.last();
+            unowned List<Hitem?> a = history.last();
             history.remove(a.data);
         }
         current = history;
@@ -2789,7 +2789,7 @@ public class  Gmpc.MetadataBrowser : Gmpc.Plugin.Base, Gmpc.Plugin.BrowserIface,
     {
         if(rref != null)
         {
-            weak Gtk.TreeView category_tree = Gmpc.Playlist3.get_category_tree_view();
+            unowned Gtk.TreeView category_tree = Gmpc.Playlist3.get_category_tree_view();
             var sel = category_tree.get_selection();
             var path = rref.get_path();
             if(path != null){
diff --git a/src/browsers/gmpc-nowplaying2.vala b/src/browsers/gmpc-nowplaying2.vala
index c893fa0..756be89 100644
--- a/src/browsers/gmpc-nowplaying2.vala
+++ b/src/browsers/gmpc-nowplaying2.vala
@@ -62,12 +62,12 @@ namespace Gmpc {
 
             }
             /* Version of the plugin*/
-            public const int[] version =  {0,0,0};
-            public override  weak int[] get_version() {
+            public int[] version =  {0,0,0};
+            public override  unowned int[] get_version() {
                 return version;
             }
             /* Name */
-            public override weak string get_name() {
+            public override unowned string get_name() {
                 return ("Now Playing");
             }
 
@@ -81,7 +81,7 @@ namespace Gmpc {
                     if(this.np_ref != null) {
                         var path = np_ref.get_path();
                         if(path != null) {
-                            weak int[] indices  = path.get_indices();
+                            unowned int[] indices  = path.get_indices();
                             config.set_int(this.get_name(), "position", indices[0]);
                             Gtk.ListStore model = (Gtk.ListStore) np_ref.get_model();
                             Gtk.TreeIter iter;
@@ -106,7 +106,7 @@ namespace Gmpc {
                 if(this.np_ref != null) {
                     var path = np_ref.get_path();
                     if(path != null) {
-                        weak int[] indices  = path.get_indices();
+                        unowned int[] indices  = path.get_indices();
                         config.set_int(this.get_name(), "position", indices[0]);
                     }
                 }
@@ -407,7 +407,7 @@ namespace Gmpc {
 
                     event.set_data_full("artist",(void *)"%s".printf(song.artist), (GLib.DestroyNotify) g_free);
                     event.button_press_event.connect((widget, event) => {
-                        string artist = (string)widget.get_data("artist");
+                        string artist = (string)widget.get_data<string>("artist");
                         Gmpc.Browser.Metadata.show_artist(artist);
 			return false;
                     });
@@ -433,8 +433,8 @@ namespace Gmpc {
                     event.set_data_full("artist",(void *)"%s".printf(song.artist), (GLib.DestroyNotify) g_free);
                     event.set_data_full("album",(void *)"%s".printf(song.album), (GLib.DestroyNotify) g_free);
                     event.button_press_event.connect((widget, event) => {
-                        string artist = (string)widget.get_data("artist");
-                        string album = (string)widget.get_data("album");
+                        string artist = (string)widget.get_data<string>("artist");
+                        string album = (string)widget.get_data<string>("album");
                         if(artist != null && album != null) {
                             Gmpc.Browser.Metadata.show_album(artist,album);
 			    return true;
@@ -550,7 +550,7 @@ namespace Gmpc {
 
                 /* Lyrics */
                 var i = 0;
-                weak SList<weak Gtk.RadioButton> group  = null;
+                unowned SList<unowned Gtk.RadioButton> group  = null;
                 if(config.get_int_with_default("MetaData", "show-lyrics",1) == 1)
                 {
                     var alib = new Gtk.Alignment(0f,0f,1f,0f);
@@ -775,7 +775,7 @@ namespace Gmpc {
                     MPD.Data.Item list = null;
                     var data = MPD.Database.search_commit(server);
                     if(data != null){
-                        weak MPD.Data.Item iter = data.get_first();
+                        unowned MPD.Data.Item iter = data.get_first();
                         do{
                             if(iter.tag == song.album){
                                 iter = iter.next(false); 
@@ -799,7 +799,7 @@ namespace Gmpc {
 
                     list.sort_album_disc_track();
                     if(list != null) {
-                        weak MPD.Data.Item iter = list.get_first();
+                        unowned MPD.Data.Item iter = list.get_first();
                         do{
                             var button = new Gtk.Button();
                             button.set_relief(Gtk.ReliefStyle.NONE);
@@ -914,7 +914,7 @@ namespace Gmpc {
              */
             private void select_now_playing_browser(Gtk.ImageMenuItem item)
             {
-                weak Gtk.TreeView tree = Gmpc.Playlist3.get_category_tree_view();
+                unowned Gtk.TreeView tree = Gmpc.Playlist3.get_category_tree_view();
                 var sel = tree.get_selection();
                 var path = np_ref.get_path();
                 if(path != null)
diff --git a/src/vala/gmpc-database-update-tracker.vala b/src/vala/gmpc-database-update-tracker.vala
index 754f32d..6c67dac 100644
--- a/src/vala/gmpc-database-update-tracker.vala
+++ b/src/vala/gmpc-database-update-tracker.vala
@@ -28,11 +28,11 @@ public class  Gmpc.Plugin.DatabaseUpdateTracker : Gmpc.Plugin.Base {
     private Gtk.Image image = null;
     public const int[] version = {0,0,2};
 
-    public override weak int[] get_version() {
+    public override unowned int[] get_version() {
         return this.version;
     }
 
-    public override weak string get_name() {
+    public override unowned string get_name() {
         return "Database Update Tracker";
     }
 
diff --git a/src/vala/gmpc-easy-command.vala b/src/vala/gmpc-easy-command.vala
index bd762d2..c11b034 100644
--- a/src/vala/gmpc-easy-command.vala
+++ b/src/vala/gmpc-easy-command.vala
@@ -49,11 +49,11 @@ public class Gmpc.Easy.Command: Gmpc.Plugin.Base {
 	/**
 	 * Required plugin implementation
 	 */
-	 public override weak string get_name() 
+	 public override unowned string get_name() 
 	 {
 		return _("Gmpc Easy Command");
 	 }
-	 public override weak int[] get_version()
+	 public override unowned int[] get_version()
 	 {
 		return this.version;
 	 }
@@ -142,7 +142,7 @@ public class Gmpc.Easy.Command: Gmpc.Plugin.Base {
 		this.do_query(value_unsplit);
 	}
 	public void do_query(string value_unsplit) {
-		weak Gtk.TreeModel model = this.store;
+		unowned Gtk.TreeModel model = this.store;
 		Gtk.TreeIter iter;
 		if (value_unsplit.length == 0) {
 			if(this.window != null) {
diff --git a/src/vala/gmpc-favorites.vala b/src/vala/gmpc-favorites.vala
index 42639d1..b3d0195 100644
--- a/src/vala/gmpc-favorites.vala
+++ b/src/vala/gmpc-favorites.vala
@@ -84,7 +84,7 @@ namespace Gmpc.Favorites{
         bool
         is_favorite(string path)
         {
-            weak MPD.Data.Item iter = this.list.get_first();
+            unowned MPD.Data.Item iter = this.list.get_first();
             while(iter != null)
             {
                 if(iter.type == MPD.Data.Type.SONG)
@@ -115,7 +115,7 @@ namespace Gmpc.Favorites{
                     /* Remove it */
                     /* To be able to remove it we have to first lookup the position */
                     /* This needs libmpd 0.18.1 */
-                    weak MPD.Data.Item iter = this.list.get_first();
+                    unowned MPD.Data.Item iter = this.list.get_first();
                     while(iter != null)
                     {
                         if(iter.type == MPD.Data.Type.SONG)
@@ -161,7 +161,7 @@ namespace Gmpc.Favorites{
             } else {
                 favorites.ref();
             }
-            favorites.updated += update;
+            favorites.updated.connect(update);
             this.image = new Gtk.Image();
             this.update(favorites);
             this.add(this.image);
diff --git a/src/vala/gmpc-metadata-prefetcher.vala b/src/vala/gmpc-metadata-prefetcher.vala
index 6cabc71..eed8ba7 100644
--- a/src/vala/gmpc-metadata-prefetcher.vala
+++ b/src/vala/gmpc-metadata-prefetcher.vala
@@ -26,11 +26,11 @@ private const bool use_transition_mpf = Gmpc.use_transition;
 public class  Gmpc.Plugin.MetadataPrefetcher : Gmpc.Plugin.Base {
     public const int[] version = {0,0,2};
 
-    public override weak int[] get_version() {
+    public override unowned int[] get_version() {
         return this.version;
     }
 
-    public override weak string get_name() {
+    public override unowned string get_name() {
         return "Metadata pre-fetcher";
     }
 
diff --git a/src/vala/gmpc-paned-size-group.vala b/src/vala/gmpc-paned-size-group.vala
index fa018df..eb0f776 100644
--- a/src/vala/gmpc-paned-size-group.vala
+++ b/src/vala/gmpc-paned-size-group.vala
@@ -23,7 +23,7 @@ using MPD;
 
 namespace Gmpc{
 	public class PanedSizeGroup : GLib.Object {
-		private List<weak Gtk.Paned> list = null;
+		private List<unowned Gtk.Paned> list = null;
         private int position = config.get_int_with_default("paned-size-group", "position", 150);
 
 		public 
@@ -51,7 +51,7 @@ namespace Gmpc{
 
 			var pane = (Gtk.Paned) paned;
 			position = pane.get_position();
-			foreach(weak Gtk.Paned p in list)
+			foreach(unowned Gtk.Paned p in list)
 			{
 				if(p != paned)
 				{
diff --git a/src/vala/gmpc-plugin.vala b/src/vala/gmpc-plugin.vala
index 667765a..a6025bf 100644
--- a/src/vala/gmpc-plugin.vala
+++ b/src/vala/gmpc-plugin.vala
@@ -33,7 +33,7 @@ namespace Gmpc {
             /* This string tell gmpc what translation domain to use when trying to translate the plugins name. 
              * If NULL then gmpc's translation domain is used.
              */
-            public weak string translation_domain = null;
+            public unowned string translation_domain = null;
             /* This is set by gmpc, it contains the full path of the plugin.
              * This is used by gmpc_plugin_get_data_path to calculate the location of the data files.
              */
@@ -51,11 +51,11 @@ namespace Gmpc {
             /**
              * Function should return the version of the plugin
              */
-            public abstract weak int[] get_version();
+            public abstract unowned int[] get_version();
             /**
              * Return the name of the plugin
              */
-            public abstract weak string get_name ();
+            public abstract unowned string get_name ();
             /**
              * This is called before the plugin is destroyed. Plugins should save it state here.
              *
diff --git a/src/vala/gmpc-rating.vala b/src/vala/gmpc-rating.vala
index b8fe165..9c6206c 100644
--- a/src/vala/gmpc-rating.vala
+++ b/src/vala/gmpc-rating.vala
@@ -30,7 +30,7 @@ using Gmpc;
 public class Gmpc.Rating : Gtk.Frame
 {
     private const bool use_transition = Gmpc.use_transition;
-    private weak MPD.Server server  = null;
+    private unowned MPD.Server server  = null;
     private MPD.Song song       = null;
     private Gtk.Image[] rat;
     private Gtk.HBox    box;
diff --git a/src/vala/gmpc-test-plugin.vala b/src/vala/gmpc-test-plugin.vala
index 8b3516e..e7e17ee 100644
--- a/src/vala/gmpc-test-plugin.vala
+++ b/src/vala/gmpc-test-plugin.vala
@@ -28,7 +28,7 @@ public class Gmpc.MetaData.EditWindow : Gtk.Window {
     private MPD.Song song = null;
     private Gmpc.MetaData.Type query_type = Gmpc.MetaData.Type.ALBUM_ART;
 
-    private GLib.List<weak Gmpc.AsyncDownload.Handle> downloads = null;
+    private GLib.List<unowned Gmpc.AsyncDownload.Handle> downloads = null;
     /** fetching handles */
     private void *handle = null;
     private void *handle2 = null;
@@ -172,7 +172,7 @@ public class Gmpc.MetaData.EditWindow : Gtk.Window {
         this.bar.pulse();
         if(status == Gmpc.AsyncDownload.Status.DONE)
         {
-            weak uchar[] data = handle.get_data();
+            unowned uchar[] data = handle.get_data<uchar[]>();
             if(this.query_type == Gmpc.MetaData.Type.ALBUM_ART || this.query_type == Gmpc.MetaData.Type.ARTIST_ART)
             {
                 try{
@@ -235,14 +235,14 @@ public class Gmpc.MetaData.EditWindow : Gtk.Window {
                 }
             }
         }
-        foreach(weak MetaData.Item md in list)
+        foreach(unowned MetaData.Item md in list)
         {
 
             if(this.query_type == Gmpc.MetaData.Type.ALBUM_ART || this.query_type == Gmpc.MetaData.Type.ARTIST_ART)
             {
                 if(md.content_type == Gmpc.MetaData.ContentType.URI)
                 {
-                    weak string uri = md.get_uri();
+                    unowned string uri = md.get_uri();
                     if(md.content_type == Gmpc.MetaData.ContentType.URI)
                     {
                         if(uri[0] == '/'){
@@ -290,7 +290,7 @@ public class Gmpc.MetaData.EditWindow : Gtk.Window {
 
                 if(md.content_type == Gmpc.MetaData.ContentType.TEXT)
                 {
-                    weak string uri = md.get_text();
+                    unowned string uri = md.get_text();
                     add_entry_text(plugin_name, "n/a", uri);
                 }
                 else 
@@ -302,7 +302,7 @@ public class Gmpc.MetaData.EditWindow : Gtk.Window {
                 else
                 if(md.content_type == Gmpc.MetaData.ContentType.URI)
                 {
-                    weak string uri = md.get_uri();
+                    unowned string uri = md.get_uri();
                     if(uri[0] == '/'){
                         try {
                             string content;
@@ -324,7 +324,7 @@ public class Gmpc.MetaData.EditWindow : Gtk.Window {
     public void store_image(Gmpc.AsyncDownload.Handle handle, Gmpc.AsyncDownload.Status status)
     {
         if(status == Gmpc.AsyncDownload.Status.PROGRESS){
-            weak uchar[] data =handle.get_data();
+            unowned uchar[] data =handle.get_data<uchar[]>();
             this.sensitive = false;
             this.pbox.show();
             int64 total_size = handle.get_content_size(); 
@@ -338,7 +338,7 @@ public class Gmpc.MetaData.EditWindow : Gtk.Window {
         this.downloads.remove(handle);
         if(status == Gmpc.AsyncDownload.Status.DONE)
         {
-            weak uchar[] data = handle.get_data();
+            unowned uchar[] data = handle.get_data<uchar[]>();
             var file = Gmpc.MetaData.get_metadata_filename(this.query_type, this.song,null); 
             try {
                 GLib.FileUtils.set_contents(file, (string)data, (long)data.length);
@@ -369,7 +369,7 @@ public class Gmpc.MetaData.EditWindow : Gtk.Window {
         string path = null;
         if(this.query_type == Gmpc.MetaData.Type.ALBUM_ART || this.query_type == Gmpc.MetaData.Type.ARTIST_ART)
         {
-            path = (string)button.get_data("path");
+            path = (string)button.get_data<string>("path");
             if(path != null)
             {
                 if(path[0]  == '/')
@@ -393,13 +393,12 @@ public class Gmpc.MetaData.EditWindow : Gtk.Window {
                         this.downloads.append(h);
                 }
             }else{
-                string base64 =(string)button.get_data("data");
+                string base64 =(string)button.get_data<string>("data");
                 if(base64 != null) {
                     string filename = Gmpc.MetaData.get_metadata_filename(this.query_type,this.song, null); 
-                    size_t len=0;
                     uchar[] data = GLib.Base64.decode(base64);
                     try{
-                    GLib.FileUtils.set_contents(filename, (string)data, (ssize_t)len);
+                    GLib.FileUtils.set_contents(filename, (string)data, (ssize_t)data.length);
 
                     var met = new MetaData.Item();
                     met.type = this.query_type;
@@ -422,7 +421,7 @@ public class Gmpc.MetaData.EditWindow : Gtk.Window {
         }else{
             string lyric;
 
-            lyric = (string)button.get_data("lyrics");
+            lyric = (string)button.get_data<string>("lyrics");
             var file = Gmpc.MetaData.get_metadata_filename(this.query_type, this.song,null); 
             try {
                 GLib.FileUtils.set_contents(file,lyric, -1); 
@@ -721,7 +720,7 @@ public class Gmpc.MetaData.EditWindow : Gtk.Window {
 
 
 public class  Gmpc.TestPlugin : Gmpc.Plugin.Base,Gmpc.Plugin.ToolMenuIface, Gmpc.Plugin.SongListIface {
-    public const int[] version = {0,0,2};
+    public int[] version = {0,0,2};
     /*********************************************************************************
      * Plugin base functions 
      * These functions are required.
@@ -730,13 +729,13 @@ public class  Gmpc.TestPlugin : Gmpc.Plugin.Base,Gmpc.Plugin.ToolMenuIface, Gmpc
         /* Mark the plugin as an internal dummy */
         this.plugin_type = 8+4;
     }
-    public override weak int[] get_version() {
+    public override unowned int[] get_version() {
         return this.version;
     }
     /**
      * The name of the plugin
      */
-    public override weak string get_name() {
+    public override unowned string get_name() {
         return "Vala test plugin";
     }
 
@@ -766,14 +765,14 @@ public class  Gmpc.TestPlugin : Gmpc.Plugin.Base,Gmpc.Plugin.ToolMenuIface, Gmpc
     private void menu_activate_tree(Gtk.MenuItem item)
     {
         Gtk.TreeIter iter;
-        Gtk.TreeView tv = (Gtk.TreeView)item.get_data("treeview");
+        Gtk.TreeView tv = (Gtk.TreeView)item.get_data<string>("treeview");
         Gtk.TreeModel model = tv.get_model();
         var selection = tv.get_selection();
-        foreach(weak Gtk.TreePath path in selection.get_selected_rows(out model))
+        foreach(unowned Gtk.TreePath path in selection.get_selected_rows(out model))
         {
             if(model.get_iter(out iter, path))
             {
-                weak MPD.Song song = null;
+                unowned MPD.Song song = null;
                 model.get(iter,0, out song);
                 if(song != null)
                 {
@@ -803,7 +802,7 @@ public class  Gmpc.TestPlugin : Gmpc.Plugin.Base,Gmpc.Plugin.ToolMenuIface, Gmpc
 
     public void menu_activated_album(Gtk.MenuItem item)
     {
-        weak MPD.Song song = server.playlist_get_current_song();
+        unowned MPD.Song song = server.playlist_get_current_song();
         new Gmpc.MetaData.EditWindow(song,Gmpc.MetaData.Type.ALBUM_ART);
     }
     public int tool_menu_integration(Gtk.Menu menu)
diff --git a/src/vala/gmpc-url-fetching-gui.vala b/src/vala/gmpc-url-fetching-gui.vala
index 08b1ef2..cfdd08f 100644
--- a/src/vala/gmpc-url-fetching-gui.vala
+++ b/src/vala/gmpc-url-fetching-gui.vala
@@ -51,7 +51,7 @@ namespace Gmpc.UrlFetching
 		private void add_url_dialog_response( int response_id)
 		{
 			if(response_id == 1) {
-				weak Gtk.Entry entry = (Gtk.Entry)this.builder.get_object("url_entry");
+				unowned Gtk.Entry entry = (Gtk.Entry)this.builder.get_object("url_entry");
 				string url = entry.get_text();
 				this.parse_callback(this, url);
 				return;
diff --git a/src/vapi/gmpc.vapi b/src/vapi/gmpc.vapi
index ac9a49b..c9d40a9 100644
--- a/src/vapi/gmpc.vapi
+++ b/src/vapi/gmpc.vapi
@@ -50,7 +50,7 @@ namespace Gmpc {
             [CCode (cname="meta_data_new")]
             public Item ();
             public Gmpc.MetaData.Type type; 
-           public weak string plugin_name;
+           public unowned string plugin_name;
            public int size;
            public Gmpc.MetaData.ContentType content_type;
 
@@ -61,25 +61,25 @@ namespace Gmpc {
            public void set_uri(string uri);
            /* add accessors? */
            [CCode (cname="meta_data_get_raw")]
-           public weak uchar[] get_raw();
+           public unowned uchar[] get_raw();
 
            [CCode (cname="meta_data_get_text")]
-           public weak string  get_text();
+           public unowned string  get_text();
            [CCode (cname="meta_data_get_text_from_html")]
            public string get_text_from_html();
            /* same as get_text */
 
            [CCode (cname="meta_data_get_uri")]
-           public weak string get_uri();
+           public unowned string get_uri();
 
            [CCode (cname="meta_data_get_html")]
-           public weak string get_html();
+           public unowned string get_html();
 
            [CCode (cname="meta_data_get_text_vector")]
-           public weak string[] get_text_vector();
+           public unowned string[] get_text_vector();
 
            [CCode (cname="meta_data_get_text_list")]
-           public weak GLib.List<weak string> get_text_list();
+           public unowned GLib.List<unowned string> get_text_list();
 
            [CCode (cname="meta_data_is_text_list")]
            public bool  is_text_list();
@@ -198,9 +198,9 @@ namespace Gmpc {
             public void cancel ();
 
             [CCode (cname="gmpc_easy_handler_get_data_vala_wrap", cheader_filename="gmpc_easy_download.h")]
-            public weak uchar[] get_data();
+            public unowned uchar[] get_data();
             [CCode (cname="gmpc_easy_handler_get_uri", cheader_filename="gmpc_easy_download.h")]
-            public weak string get_uri();
+            public unowned string get_uri();
 
             [CCode (cname="gmpc_easy_handler_get_user_data", cheader_filename="gmpc_easy_download.h")]
             public void * get_user_data();
@@ -217,7 +217,7 @@ namespace Gmpc {
         public delegate void Callback (Gmpc.AsyncDownload.Handle handle, Gmpc.AsyncDownload.Status status);
 
         [CCode (cname="gmpc_easy_async_downloader", cheader_filename="gmpc_easy_download.h")]
-        public weak Gmpc.AsyncDownload.Handle download(string uri, Gmpc.AsyncDownload.Callback callback);
+        public unowned Gmpc.AsyncDownload.Handle download(string uri, Gmpc.AsyncDownload.Callback callback);
         
         [CCode (cname="gmpc_easy_download_uri_escape", cheader_filename="gmpc_easy_download.h")]
         public string escape_uri(string part);
@@ -232,7 +232,7 @@ namespace Gmpc {
 
     namespace Playlist {
         [CCode (cname="(GtkWindow *)playlist3_get_window", cheader_filename="plugin.h")]
-        public weak Gtk.Window get_window();
+        public unowned Gtk.Window get_window();
 [CCode (cname="playlist3_window_is_hidden", cheader_filename="plugin.h")]
         public bool is_hidden();
 
@@ -317,7 +317,7 @@ namespace Gmpc {
             public void set_request_artist(string? list);
 
             [CCode (cname="gmpc_mpddata_model_get_request_artist")]
-            public weak string get_request_artist();
+            public unowned string get_request_artist();
             public int icon_size;
         }
     }
@@ -342,7 +342,7 @@ namespace Gmpc {
             public string? get_current_id();
             public void set_db_update_time(string id, int value);
             public int get_db_update_time(string id);
-            public weak string? get_music_directory(string id); 
+            public unowned string? get_music_directory(string id); 
 
     }
 
diff --git a/src/vapi/libmpd.vapi b/src/vapi/libmpd.vapi
index 59424a2..9a5c2c5 100644
--- a/src/vapi/libmpd.vapi
+++ b/src/vapi/libmpd.vapi
@@ -7,7 +7,7 @@ namespace MPD {
     public class Server {
 
         public MPD.Song playlist_get_song(int songid);
-        public weak MPD.Song playlist_get_current_song();
+        public unowned MPD.Song playlist_get_current_song();
         public int player_get_next_song_id();
         [CCode (cname="mpd_server_get_database_update_time")]
         public int get_database_update_time();
@@ -158,10 +158,10 @@ namespace MPD {
                 public void sort_album_disc_track();
 
                 [CCode (cname="mpd_data_get_next_real")] 
-                public weak Item? next(bool free);
+                public unowned Item? next(bool free);
 
                 [CCode (cname="mpd_data_get_first")] 
-                public weak Item? get_first();
+                public unowned Item? get_first();
 
                 [CCode (cname="mpd_data_get_first")] 
                 [ReturnsModifiedPointer ()]
-- 
